template Notification "generic-service-notification" {

  interval = 60m
  user_groups = [ "linux-admins" ]

  //opoznienie pierwszego powiadomenia, jezeli zdefiniowane
  if (service.vars.notification.times) { 
    times += service.vars.notification.times
  }

  // nadpisanie parametrow wartosciami z uslugi
  if (service.vars.notification.interval) {
  //  log("zmieniony notification interval na " + service.name + " / " + service.name)
    interval = service.vars.notification.interval
  }

  if (service.vars.notification.period) {
    period = service.vars.notification.period
  }
  if (host.vars.all_services.notification.period) {
    period = host.vars.all_services.notification.period
  }


// nadmiarowe przy include generic-service
// dodatkowi uzytkownicy i grupy z poziomu hosta

/**
  if (host.vars.all_services.notification.extra_users) {
    users += host.vars.all_services.notification.extra_users
	log("NOTIFY: " + host.name + " host.vars.all_services.notification.extra_users ")
    for (osoba in host.vars.all_services.notification.extra_users) { 
	log(osoba + " -> " + host.name + " : " + service.name)
    }
  }

  if (host.vars.all_services.notification.extra_groups) {
    user_groups += host.vars.all_services.notification.extra_groups
	log("NOTIFY: " + host.name + " host.vars.all_services.notification.extra_groups ")
    for (parametr in host.vars.all_services.notification.extra_groups) { 
	log(parametr + " -> " + host.name + " : " + service.name)
    }
  }

*/

// dodatkowi uzytkownicy i grupy, z poziomu samej uslugi
  if (service.vars.notification.extra_users) {
    users += service.vars.notification.extra_users
//	log("NOTIFY: service.vars.notification.extra_users ")
//    for (parametr in service.vars.notification.extra_users) { 
//	log(" -- " + parametr + " -> " + host.name + " : " + service.name)
//    }
  }

  if (service.vars.notification.extra_groups) {
    user_groups += service.vars.notification.extra_groups

//	log("NOTIFY: service.vars.notification.extra_groups ")
//    for (parametr in service.vars.notification.extra_groups) { 
//	log(" -- " + parametr + " -> " + host.name + " dla " + service.name)
//    }
  }




// kompletne nadpisanie grup/uzytkownikow z poziomu hosta
  if (host.vars.all_services.notification.groups) {
    user_groups = host.vars.all_services.notification.groups
//    log("NOTIFY: host.vars.all_services.notification.groups ")
//    for (parametr in host.vars.all_services.notification.groups) { 
//	log(" -- " + parametr + " -> " + host.name + " dla " + service.name)
//    }
  }

  if (host.vars.all_services.notification.users) { 
    users = host.vars.all_services.notification.users
//    log("NOTIFY: host.vars.all_services.notification.users ")
//    for (parametr in host.vars.all_services.notification.users) { 
//	log(" -- " + parametr + " -> " + host.name + " dla " + service.name)
//    }


  }

// nadpisanie z poziomu uslugi, ma priorytet po nadpisaniu z hosta
  if (service.vars.notification.users) {
    users = service.vars.notification.users
//	log("NOTIFY: service.vars.notification.users")
//    for (parametr in service.vars.notification.users) { 
//	log(" -- " + parametr + " -> " + host.name + " dla " + service.name)
//    }
  }

  if (service.vars.notification.groups) {
    user_groups = service.vars.notification.groups
//	log("NOTIFY: service.vars.notification.groups")
//    for (parametr in service.vars.notification.groups) { 
//	log(" -- " + parametr + " -> " + host.name + " dla " + service.name)
//    }
  }

// director nieprawidlowo eksportuje zagniezdzone zmienne, wiec dodatkowe sprawdzenie

  if (service.vars.notification_users) {
    users = service.vars.notification_users
  }

  if (service.vars.notification_groups) {
    user_groups = service.vars.notification_groups
  }



}
